static uint xor_shift_rng(uint state)
{
  state ^= (state << 13);
  state ^= (state >> 17);
  state ^= (state << 5);
  return state;
}

static float rng01 (uint state)
{
	return (
    (float)(xor_shift_rng(state)) / (float)(UINT_MAX)
  );
}

static int rot(int x, int b) {
  return (x << b) ^ (x >> (32-b));
}

static uint hash2(int2 i) {
	int a = i.s0;
	int b = i.s1;
	for (int r = 0; r < 3; r++) {
		a = rot ((int) ((a^0xcafebabe) + (b^0xfaceb00c)), 23);
		b = rot ((int) ((a^0xdeadbeef) + (b^0x8badf00d)), 5);
	}
	return (uint)(a^b);
}

static uint hash(int i) {
	int a = i;
	int b = 0;
	for (int r = 0; r < 3; r++) {
		a = rot ((int) ((a^0xcafebabe) + (b^0xfaceb00c)), 23);
		b = rot ((int) ((a^0xdeadbeef) + (b^0x8badf00d)), 5);
	}
	return (uint)(a^b);
}
